@using BundestagMine.Models.Database.MongoDB
@using BundestagMine.Logic.ViewModels.GlobalSearch
@using BundestagMine.Logic.ViewModels
@using BundestagMine.Logic.Services
@model GlobalSearchResultViewModel
@inject BundestagScraperService BundestagScraperService

<div class="flexed align-items-center justify-content-around flex-wrap">
    @foreach (var speechComment in Model.ResultList as List<SpeechCommentViewModel>)
    {
        <div class="col-lg-6">
            <div class="flexed shout">
                <div>
                    @{
                        var imgSrc = BundestagScraperService.GetDeputyPortraitFromImageDatabase(speechComment.Speaker?.SpeakerId);
                        if (string.IsNullOrEmpty(imgSrc)) imgSrc = "./img/Unbekannt.jpg";
                        <img src="@imgSrc" class="img-speaker" />
                    }
                </div>
                <div class="divider">
                    <div class="flexed align-items-center justify-content-between">
                        <p class="m-0"></p>
                        <p class="name open-speaker-inspector clickable" data-id="@speechComment.Speaker?.SpeakerId">
                            @speechComment.Speaker?.FirstName @speechComment.Speaker?.LastName (@(speechComment.Speaker?.Fraction ?? speechComment.Speaker?.Party))
                        </p>
                        <a class="ml-2 open-speech-btn mr-2 clickable" data-toggle="popover" data-trigger="hover" data-placement="left"
                       data-content="Rede lesen" data-id="@speechComment.SpeechId">
                            <i class="fab fa-readme"></i>
                        </a>
                    </div>

                    <p class="info">
                        @speechComment.SpeechSegment.Text
                    </p>
                    @foreach (var shout in speechComment.SpeechSegment.Shouts)
                    {
                        <div class="flexed justify-content-between align-items-center">
                            @{
                                // We want a sneekpeak of the speech that contains the searchstring. We earlier fetched all the segments
                                // that fit the criteria. Showcase the segment.
                                var sneekpeak = shout.Text;
                                var searches = Model.SearchString.ToLower().Split(" ");
                                <p class="sneekpeak">
                                    <i class="fas fa-comment"></i>
                                    @foreach (var word in sneekpeak.Split(" "))
                                    {
                                        @if (searches.Any(s => word.ToLower().Contains(s)))
                                        {
                                            <span class="word">@word</span>
                                        }
                                        else
                                        {
                                            <span>@word</span>
                                        }
                                    }
                                </p>
                            }
                            <div class="shouter">
                                @{
                                    var imgSrcShouter = "./img/Unbekannt.jpg";
                                    if (!string.IsNullOrEmpty(shout.SpeakerId))
                                    {
                                        var src = BundestagScraperService.GetDeputyPortraitFromImageDatabase(shout.SpeakerId);
                                        if (!string.IsNullOrEmpty(src)) imgSrcShouter = src;
                                    }
                                    <img src="@imgSrcShouter" />
                                    <p class="open-speaker-inspector clickable" data-id="@shout.SpeakerId">
                                        @shout.FirstName @shout.LastName (@(shout.Fraction ?? shout.Party))
                                    </p>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
